[project]
name = "zookeeper-k8s-operator"
version = "1.0"
description = "zookeeper-k8s-operator"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "ops >=2.17.0",
  "kazoo >=2.8.0,<2.10.0",
  "tenacity >=8.0.1",
  "pure-sasl >=0.6.2",
  "cryptography >42.0.0",
  "cosl >=0.0.5",
  "pydantic >=1.10.7",
  "pyyaml >=6.0.1",
  "jsonschema >=4.10",
  "lightkube >=0.15.0",
  "typing-extensions >=4.9.0",
  "boto3 >=1.34.159",
  "boto3-stubs[s3] >= 1.35.8",
  "httpx >=0.27.2",
  "rich >=13.8.1",
  "psycopg2 >=2.9.9,<3",
]

[project.optional-dependencies]
charm-libs = [
  # data_platform_libs/v0/data_interfaces.py
  "ops >=2.0.0",
  # data_platform_libs/v0/upgrade.py
  # grafana_agent/v0/cos_agent.py requires pydantic <2
  # "poetry",
  "poetry-core",
  "pydantic >=1.10,<2",
  # tls_certificates_interface/v1/tls_certificates.py
  # tls_certificates lib uses a feature only available in cryptography >=42.0.5
  "cryptography >=42.0.5",
  "jsonschema",
]
other = ["textual==0.83"]  # Just to demonstrate renovate with extras

[dependency-groups]
format = [
   "black >=22.3.0,<23.0.0",
  "ruff >= 0.7.0",
]
lint = [
  "black >=22.3.0,<23.0.0",
  "ruff >= 0.7.0",
  "codespell>=2.3.0",
  "pyright >=1.1.318",
]
dev-dependencies = [
  # format + lint
  "black >=22.3.0,<23.0.0",
  "ruff >= 0.7.0",
  "codespell>=2.3.0",
  "pyright >=1.1.318",
  # unit
  "pytest >=7.2",
  "coverage[toml] >=7.0",
  "jsonschema >=4.10",
  "pytest-mock >=3.11.1",
  "ops-scenario >=7.0.0",
  # integration
  "pytest-operator-cache",
  "pytest-microceph",
]

[tool.uv.sources]
pytest-operator-cache = { git = "https://github.com/canonical/data-platform-workflows", tag = "v22.0.0", subdirectory = "python/pytest_plugins/pytest_operator_cache" }
pytest-microceph = { git = "https://github.com/canonical/data-platform-workflows", tag = "v22.0.0", subdirectory = "python/pytest_plugins/microceph" }

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
markers = ["unstable"]
asyncio_mode = "auto"
# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py310"]
extend-exclude = "tests/integration/app-charm/lib"

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 99
extend-exclude = ["__pycache__", "*.egg_info", "tests/integration/app-charm/lib"]
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "D", "I001"]
ignore = ["E501", "D107"]
per-file-ignores = { "tests/*" = ["D100", "D101", "D102", "D103", "D104", "E999"], "src/literals.py" = ["D101"] }
extend-ignore = [
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D401",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
mccabe.max-complexity = 10

[tool.pyright]
include = ["src"]
extraPaths = ["./lib"]
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "basic"
reportIncompatibleMethodOverride = false
reportImportCycles = false
reportMissingModuleSource = true
stubPath = ""
